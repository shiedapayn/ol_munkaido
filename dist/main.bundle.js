/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (() => {

eval("const employees = [\r\n    {id: 101, name: 'Kis Bela', bithDate: '1977.03.12.', osszMunka: '', hetvegiPotlek: ''},\r\n    {id: 102, name: 'Nagy Sandor', bithDate: '1983.05.19.', osszMunka: '', hetvegiPotlek: ''},\r\n    {id: 103, name: 'Farkas Bela', bithDate: '2005.11.02.', osszMunka: '', hetvegiPotlek: ''},\r\n    {id: 104, name: 'Virag Hajnalka', bithDate: '1998.06.04.', osszMunka: '', hetvegiPotlek: ''},\r\n    {id: 105, name: 'Piros Ilona', bithDate: '2004.02.10.', osszMunka: '', hetvegiPotlek: ''},\r\n];\r\n\r\nconst tableRows = [\r\n    {\r\n        text: 'ID',\r\n        value: 'id'\r\n    },\r\n    {\r\n        text: 'Nev',\r\n        value: 'name',\r\n    },\r\n    {\r\n        text: 'Osszes munkaido',\r\n        value: 'osszMunkaido',\r\n    },\r\n    {\r\n        text: 'Hetvegi potlek',\r\n        value: 'hetvegiPotlek'\r\n    },\r\n\r\n];\r\n\r\nlet napok = {};\r\n\r\nlet workingHouses = {};\r\n\r\nconst dayOfTheWeek = [\r\n    {name: 'Hetfo', short: 'H'},\r\n    {name: 'Kedd', short: 'K'},\r\n    {name: 'Szerda', short: 'Sz'},\r\n    {name: 'Csutortok', short: 'Cs'},\r\n    {name: 'Pentek', short: 'P'},\r\n    {name: 'Szombat', short: 'Sz'},\r\n    {name: 'Vasarnap', short: 'V'},\r\n];\r\n\r\n\r\nconst renderTable = () => {\r\n    const tr_fejlec = document.getElementById('tr_fejlec');\r\n    const munkaidoTabla = document.getElementById('munkaidoTabla');\r\n    tableRows.map((tableRow) => {\r\n        if (tableRow.text) {\r\n            addTableElement('th', tr_fejlec, tableRow.text);\r\n        }\r\n    })\r\n\r\n    calcDaysOfTheWeek(tr_fejlec);\r\n\r\n    employees.map((employee) => {\r\n        let tr_munkas = document.createElement('tr');\r\n        tr_munkas.id = employee.id;\r\n\r\n        addTableElement('td', tr_munkas, employee.id);\r\n        addTableElement('td', tr_munkas, employee.name);\r\n\r\n        munkaidoTabla.appendChild(tr_munkas);\r\n\r\n        const extraFields = [\r\n            {name: 'Osszes munkaido', short: 'osszesMunkaido', value: 2400},\r\n            {name: 'hetvegi potlek', short: 'hetvegiPotlek', value: 0},\r\n        ];\r\n\r\n        extraFields.map(extraField => {\r\n            addTableElement('td', tr_munkas, Math.floor(extraField.value / 60), {}, extraField.short);\r\n        });\r\n        // let blockId = `${employee.id}_${dayOfTheWeek[getNthDay(i).getDay()].short}`;\r\n        // td.id = blockId;\r\n\r\n        for (const key in workingHouses[employee.id]) {\r\n            let td = document.createElement('td');\r\n            td.id = key;\r\n            let kezdInput = document.createElement('input');\r\n            kezdInput.name = \"kezdInput\";\r\n            let vegInput = document.createElement('input');\r\n            vegInput.name = \"vegInput\";\r\n            let idoSpan = document.createElement('span');\r\n            idoSpan.innerHTML = \"00:00\"\r\n\r\n            kezdInput.type = vegInput.type = \"time\";\r\n            kezdInput.onchange = vegInput.onchange = (e) => changeTime(e, key, document.getElementById(key),employee.id, {kezdInput,vegInput,idoSpan});\r\n\r\n            td.appendChild(kezdInput);\r\n            td.appendChild(vegInput);\r\n            td.appendChild(idoSpan);\r\n            tr_munkas.appendChild(td);\r\n        }\r\n    });\r\n    console.log(workingHouses);\r\n\r\n}\r\n\r\nconst addTableElement = (type, place, text, options = {}, id = null) => {\r\n    let element = document.createElement(type, options);\r\n    if (id) {\r\n        element.id = id;\r\n    }\r\n    element.innerHTML = text;\r\n    place.appendChild(element);\r\n\r\n}\r\n\r\nconst calcDaysOfTheWeek = (place, numberOfDays = 7) => {\r\n\r\n\r\n    for (let i = 0; i < numberOfDays; i++) {\r\n        let currentDate = getNthDay(i);\r\n        let th = document.createElement('th', {});\r\n\r\n        napok[currentDate.getDate()] = {\r\n            month: currentDate.getMonth() + 1,\r\n            day: currentDate.getDate(),\r\n            dayName: dayOfTheWeek[currentDate.getDay()].short,\r\n        };\r\n        employees.map(employee => {\r\n            workingHouses[employee.id] = workingHouses[employee.id] ?? {};\r\n            workingHouses[employee.id][currentDate.getDate().toString()] = workingHouses[employee.id][currentDate.getDate()] ?? {};\r\n            workingHouses[employee.id][currentDate.getDate().toString()] = {\r\n                kezd: 0,\r\n                veg: 0,\r\n                ido: 0\r\n            };\r\n        });\r\n\r\n\r\n        th.id = dayOfTheWeek[currentDate.getDay()].short;\r\n        th.innerHTML = `${currentDate.getMonth() + 1}.${currentDate.getDate()}. ${dayOfTheWeek[currentDate.getDay()].short}`;\r\n\r\n        // tableRows.find(x => x.dates).dates.map((data) => {\r\n        //     addTableElement('td', th, data.text, {});\r\n        // })\r\n        if ([5, 6].includes(currentDate.getDay())) {\r\n            th.classList.add(\"weekend\");\r\n        }\r\n        place.appendChild(th);\r\n    }\r\n}\r\n\r\nconst getNthDay = (i) => {\r\n    let currentDate = new Date();\r\n    currentDate.setDate(currentDate.getDate() + i);\r\n    return currentDate;\r\n}\r\n\r\nconst calcMunkaido = (id = 0, kezd = '0:00', veg = '7:00') => {\r\n\r\n    let timeStartHours = new Date(\"01/01/2007 \" + kezd).getHours();\r\n    let timeEndHours = new Date(\"01/01/2007 \" + veg).getHours();\r\n\r\n    let timeStartMinutes = new Date(\"01/01/2007 \" + kezd).getMinutes();\r\n    let timeEndMinutes = new Date(\"01/01/2007 \" + veg).getMinutes();\r\n\r\n    let hourDiffInMinutes = (timeStartHours < timeEndHours ? (timeEndHours - timeStartHours) : (timeEndHours - timeStartHours) + 24) * 60;\r\n    let minutesDiff = (timeEndMinutes - timeStartMinutes);\r\n\r\n    let hourDiff = Math.floor((hourDiffInMinutes + minutesDiff) / 60);\r\n    minutesDiff = (hourDiffInMinutes + minutesDiff) % 60;\r\n\r\n    return hourDiff + \":\" + minutesDiff;\r\n}\r\n\r\nconst calcEmployeeAge = (id = 103) => {\r\n    let today = new Date();\r\n\r\n    let employee = employees.find(x => x.id === id);\r\n    let birthDate = new Date(employee.bithDate);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    let m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    return age;\r\n}\r\n\r\nrenderTable();\r\n\r\nconst changeTime = (e, day, block,employeeID, {kezdInput,vegInput,idoSpan}) => {\r\n\r\n    // calcOsszmunka(employeeID);\r\n    workingHouses[employeeID][day]['kezd'] = kezdInput.value;\r\n    workingHouses[employeeID][day]['veg'] = vegInput.value;\r\n    let allFilled = !!(kezdInput.value && vegInput.value);\r\n    if (allFilled) {\r\n        let ido = calcMunkaido(0, kezdInput.value, vegInput.value);\r\n        workingHouses[employeeID][day]['ido'] = ido;\r\n        idoSpan.innerHTML = ido;\r\n        calcOsszmunka(employeeID)\r\n    }\r\n}\r\n\r\nconst calcOsszmunka = (employeeID) => {\r\n    let workingHourSumm = 0;\r\n    for(const date in workingHouses[employeeID]) {\r\n        console.log(new Date(workingHouses[employeeID][date].ido));\r\n\r\n        workingHourSumm += workingHouses[employeeID][date].ido;\r\n    }\r\n    console.log(workingHourSumm);\r\n\r\n}\r\n\n\n//# sourceURL=webpack:///./src/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/main.js"]();
/******/ 	
/******/ })()
;